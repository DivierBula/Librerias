import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';

@Component({
  selector: 'app-select-modal',
  templateUrl: './select-modal.component.html',
  styleUrls: ['./select-modal.component.scss']
})
export class SelectModalComponent implements OnInit {

  @ViewChild('input', { static:false }) private input: ElementRef;

  @Input() title: String;
  @Input() show: Boolean;
  @Input() array: any;
  @Input() arraytemp: any;
  @Output() close = new EventEmitter<Boolean>();
  @Output() output = new EventEmitter<any>();
  @Input() size?: String = 'mini-modal';

  constructor() {}

  ngOnInit() {}

  closeModal() {
    this.close.emit(false);
  }

  clickData(data: any) {
    this.output.emit(data);
  }

  protected ngOnChanges() {
    if (this.show) {
      this.searchorden('');
      setTimeout(() => {
        this.input.nativeElement.focus();
      }, 500);
    }
	}

  searchorden(filter: any) {
      if(filter.length==0){
        this.arraytemp = this.array;
      } else {
        this.arraytemp = this.array.filter(item => {
          if (item.nombre.toString().toLowerCase().indexOf(filter.toLowerCase()) !== -1
          || (item.sigla == undefined) ? item.nombre.toString().toLowerCase().indexOf(filter.toLowerCase()) !== -1 :  item.sigla.toString().toLowerCase().indexOf(filter.toLowerCase()) !== -1) {
            return true;
          }
          return false;
        });
    }
  }

}
